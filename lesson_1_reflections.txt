How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    Quite much since usually I get lost looking on the screen where there was a misspelling most of the times. And In fact, by this way I can spot it on a first glance. 

How could having easy access to the entire history of a file make you a better
programmer in the long term?

    By observing common error patterns and other issues that can be improved when one is conscious about it 

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?
    
    Pros: There's more control on the process avoiding irrelevant changes to not be tracked. Cons: Automation lets you focus on the work and forget other actions as committing a change

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Because some tasks imply many modifications after one change as html+css connected files.

How can you use the commands git log and git diff to view the history of files?
    
    git log / git log stats to track changes in history and git diff between commits.

How might using version control make you more confident to make changes that
could break something?
    
    Since I can go back to retrieve correct info.

Now that you have your workspace set up, what do you want to try using Git for?

    To version control my software